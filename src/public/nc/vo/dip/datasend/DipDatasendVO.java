  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.datasend;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
	import nc.vo.pub.*;
import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-21
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DipDatasendVO extends SuperVO {
           
             public String def_str2;
             public String tasktype;
             public String contorlstatus;
             public String businessdata;
             public Integer dr;
             public String def_str3;
             public String filepath;
             public String endstatus;
             public String code;
             public String ts;
             public String threadno;
             public String def_str1;
             public String pk_datasend;
             public String server;
             public String name;
             public String def_str4;
             public UFBoolean issendbackground;
             public String pk_sys;
             public String fpk;
             public String pk_xt;
             public UFBoolean isfolder;
             
            
             public static final String  DEF_STR2="def_str2";   
             public static final String  TASKTYPE="tasktype";   
             public static final String  CONTORLSTATUS="contorlstatus";   
             public static final String  BUSINESSDATA="businessdata";   
             public static final String  DR="dr";   
             public static final String  DEF_STR3="def_str3";   
             public static final String  FILEPATH="filepath";   
             public static final String  ENDSTATUS="endstatus";   
             public static final String  CODE="code";   
             public static final String  TS="ts";   
             public static final String  THREADNO="threadno";   
             public static final String  DEF_STR1="def_str1";   
             public static final String  PK_DATASEND="pk_datasend";   
             public static final String  SERVER="server";   
             public static final String  NAME="name";   
             public static final String  DEF_STR4="def_str4";   
             public static final String  PK_SYS="pk_sys";   
             public static final String  ISSENDBACKGROUND="issendbackground";   
      
    
        public String getPk_sys() {
				return pk_sys;
			}

			public void setPk_sys(String pk_sys) {
				this.pk_sys = pk_sys;
			}

		/**
	   * 属性def_str2的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getDef_str2() {
		 return def_str2;
	  }   
	  
     /**
	   * 属性def_str2的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newDef_str2 String
	   */
	public void setDef_str2(String newDef_str2) {
		
		def_str2 = newDef_str2;
	 } 	  
       
        /**
	   * 属性tasktype的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getTasktype() {
		 return tasktype;
	  }   
	  
     /**
	   * 属性tasktype的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newTasktype String
	   */
	public void setTasktype(String newTasktype) {
		
		tasktype = newTasktype;
	 } 	  
       
        /**
	   * 属性contorlstatus的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getContorlstatus() {
		 return contorlstatus;
	  }   
	  
     /**
	   * 属性contorlstatus的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newContorlstatus String
	   */
	public void setContorlstatus(String newContorlstatus) {
		
		contorlstatus = newContorlstatus;
	 } 	  
       
        /**
	   * 属性businessdata的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getBusinessdata() {
		 return businessdata;
	  }   
	  
     /**
	   * 属性businessdata的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newBusinessdata String
	   */
	public void setBusinessdata(String newBusinessdata) {
		
		businessdata = newBusinessdata;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性def_str3的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getDef_str3() {
		 return def_str3;
	  }   
	  
     /**
	   * 属性def_str3的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newDef_str3 String
	   */
	public void setDef_str3(String newDef_str3) {
		
		def_str3 = newDef_str3;
	 } 	  
       
        /**
	   * 属性filepath的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getFilepath() {
		 return filepath;
	  }   
	  
     /**
	   * 属性filepath的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newFilepath String
	   */
	public void setFilepath(String newFilepath) {
		
		filepath = newFilepath;
	 } 	  
       
        /**
	   * 属性endstatus的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getEndstatus() {
		 return endstatus;
	  }   
	  
     /**
	   * 属性endstatus的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newEndstatus String
	   */
	public void setEndstatus(String newEndstatus) {
		
		endstatus = newEndstatus;
	 } 	  
       
        /**
	   * 属性code的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getCode() {
		 return code;
	  }   
	  
     /**
	   * 属性code的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newCode String
	   */
	public void setCode(String newCode) {
		
		code = newCode;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	}  
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性threadno的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getThreadno() {
		 return threadno;
	  }   
	  
     /**
	   * 属性threadno的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newThreadno String
	   */
	public void setThreadno(String newThreadno) {
		
		threadno = newThreadno;
	 } 	  
       
        /**
	   * 属性def_str1的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getDef_str1() {
		 return def_str1;
	  }   
	  
     /**
	   * 属性def_str1的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newDef_str1 String
	   */
	public void setDef_str1(String newDef_str1) {
		
		def_str1 = newDef_str1;
	 } 	  
       
        /**
	   * 属性pk_datasend的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getPk_datasend() {
		 return pk_datasend;
	  }   
	  
     /**
	   * 属性pk_datasend的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newPk_datasend String
	   */
	public void setPk_datasend(String newPk_datasend) {
		
		pk_datasend = newPk_datasend;
	 } 	  
       
        /**
	   * 属性server的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getServer() {
		 return server;
	  }   
	  
     /**
	   * 属性server的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newServer String
	   */
	public void setServer(String newServer) {
		
		server = newServer;
	 } 	  
       
        /**
	   * 属性name的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getName() {
		 return name;
	  }   
	  
     /**
	   * 属性name的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newName String
	   */
	public void setName(String newName) {
		
		name = newName;
	 } 	  
       
        /**
	   * 属性def_str4的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return String
	   */
	 public String getDef_str4() {
		 return def_str4;
	  }   
	  
     /**
	   * 属性def_str4的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newDef_str4 String
	   */
	public void setDef_str4(String newDef_str4) {
		
		def_str4 = newDef_str4;
	 } 	  
       
        /**
	   * 属性issendbackground的Getter方法.
	   *
	   * 创建日期:2011-4-21
	   * @return UFBoolean
	   */
	 public UFBoolean getIssendbackground() {
		 return issendbackground;
	  }   
	  
     /**
	   * 属性issendbackground的Setter方法.
	   *
	   * 创建日期:2011-4-21
	   * @param newIssendbackground UFBoolean
	   */
	public void setIssendbackground(UFBoolean newIssendbackground) {
		
		issendbackground = newIssendbackground;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-21
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_datasend == null) {
			errFields.add(new String("pk_datasend"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-21
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return "fpk";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-21
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_datasend";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-21
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_datasend";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-21
	  */
	public DipDatasendVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-21
	 * @param newPk_datasend 主键值
	 */
	 public DipDatasendVO(String newPk_datasend) {
		
		// 为主键字段赋值:
		 pk_datasend = newPk_datasend;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-21
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_datasend;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-21
	  * @param newPk_datasend  String    
	  */
	 public void setPrimaryKey(String newPk_datasend) {
				
				pk_datasend = newPk_datasend; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-21
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_datasend"; 
				
	 }

	public String getFpk() {
		return fpk;
	}

	public void setFpk(String fpk) {
		this.fpk = fpk;
	}

	public UFBoolean getIsfolder() {
		return isfolder;
	}

	public void setIsfolder(UFBoolean isfolder) {
		this.isfolder = isfolder;
	}

	public String getPk_xt() {
		return pk_xt;
	}

	public void setPk_xt(String pk_xt) {
		this.pk_xt = pk_xt;
	} 
} 
