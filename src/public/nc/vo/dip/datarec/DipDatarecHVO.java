  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.datarec;
   	
	import java.util.ArrayList;
import java.util.HashMap;

import nc.util.dip.sj.IContrastUtil;
	import nc.vo.pub.*;
import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-7
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DipDatarecHVO extends SuperVO {
           
             public UFBoolean isdeploy;
             public String backcon;
             public Integer dr;
             public String backerrinfo;
             public String recname;
             public String pk_datarec_h;
             public String deploycode;
             public String endstatus;
             public String databakfile;
             public String sourcecon;
             public String sourcetype;
             public String repeatdata;
             public String def_str_1;
             public String ts;
             public String syscode;
             public String constatus;
             public String memorytable;
             public String backerrtab;
             public String sourceparam;
             public String dataname;
             public String def_str_2;
             public String trancon;
             public String format;
             public String pk_datadefinit_h;
             public String fpk;
             public Integer datamaptype;
             public HashMap map;
             public String tablename;
             public String pk_xt;
             public UFBoolean isfolder;
             public String ioflag;
             public String memorytype;

             
             public static final String  ISDEPLOY="isdeploy";   
             public static final String  BACKCON="backcon";   
             public static final String  DR="dr"; 
             public static final String  BACKERRINFO="backerrinfo"; 
             public static final String  RECNAME="recname";   
             public static final String  PK_DATAREC_H="pk_datarec_h";   
             public static final String  DEPLOYCODE="deploycode";   
             public static final String  ENDSTATUS="endstatus"; 
             public static final String  DATABAKFILE="databakfile";  
             public static final String  SOURCECON="sourcecon";   
             public static final String  SOURCETYPE="sourcetype";  
             public static final String  REPEATDATA="repeatdata";  
             public static final String  DEF_STR_1="def_str_1";   
             public static final String  TS="ts";   
             public static final String  SYSCODE="syscode";   
             public static final String  CONSTATUS="constatus";   
             public static final String  MEMORYTABLE="memorytable";   
             public static final String  BACKERRTAB="backerrtab"; 
             public static final String  SOURCEPARAM="sourceparam"; 
             public static final String  DATANAME="dataname";   
             public static final String  DEF_STR_2="def_str_2";   
             public static final String  TRANCON="trancon";   
             public static final String  FORMAT="format"; 
             public static final String  PK_DATADEFINIT_H="pk_datadefinit_h";
             public static final String  PK_XT="pk_xt";
             public static final String  ISFOLDER="isfolder";
             public static final String  IOFLAG="ioflag";
             public static final String  MEMORYTYPE="memorytype";

      
    
        public String getMemorytype() {
				return memorytype;
			}

			public void setMemorytype(String memorytype) {
				this.memorytype = memorytype;
			}

		/**
	   * 属性isdeploy的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return UFBoolean
	   */
	 public UFBoolean getIsdeploy() {
		 return isdeploy;
	  }   
	  
     /**
	   * 属性isdeploy的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newIsdeploy UFBoolean
	   */
	public void setIsdeploy(UFBoolean newIsdeploy) {
		
		isdeploy = newIsdeploy;
	 } 	  
       
        /**
	   * 属性backcon的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return UFBoolean
	   */
	 public String getBackcon() {
		 return backcon;
	  }   
	  
     /**
	   * 属性backcon的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newBackcon UFBoolean
	   */
	public void setBackcon(String newBackcon) {
		
		backcon = newBackcon;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性recname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getRecname() {
		 return recname;
	  }   
	  
     /**
	   * 属性recname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newRecname String
	   */
	public void setRecname(String newRecname) {
		
		recname = newRecname;
	 } 	  
       
        /**
	   * 属性pk_datarec_h的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getPk_datarec_h() {
		 return pk_datarec_h;
	  }   
	  
     /**
	   * 属性pk_datarec_h的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newPk_datarec_h String
	   */
	public void setPk_datarec_h(String newPk_datarec_h) {
		
		pk_datarec_h = newPk_datarec_h;
	 } 	  
       
        /**
	   * 属性deploycode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDeploycode() {
		 return deploycode;
	  }   
	  
     /**
	   * 属性deploycode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDeploycode String
	   */
	public void setDeploycode(String newDeploycode) {
		
		deploycode = newDeploycode;
	 } 	  
       
        /**
	   * 属性endstatus的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getEndstatus() {
		 return endstatus;
	  }   
	  
     /**
	   * 属性endstatus的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newEndstatus String
	   */
	public void setEndstatus(String newEndstatus) {
		
		endstatus = newEndstatus;
	 } 	  
       
        /**
	   * 属性sourcecon的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getSourcecon() {
		 return sourcecon;
	  }   
	  
     /**
	   * 属性sourcecon的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newSourcecon String
	   */
	public void setSourcecon(String newSourcecon) {
		
		sourcecon = newSourcecon;
	 } 	  
       
        /**
	   * 属性sourcetype的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getSourcetype() {
		 return sourcetype;
	  }   
	  
     /**
	   * 属性sourcetype的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newSourcetype String
	   */
	public void setSourcetype(String newSourcetype) {
		
		sourcetype = newSourcetype;
	 } 	  
       
        /**
	   * 属性def_str_1的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_1() {
		 return def_str_1;
	  }   
	  
     /**
	   * 属性def_str_1的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_1 String
	   */
	public void setDef_str_1(String newDef_str_1) {
		
		def_str_1 = newDef_str_1;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	} 
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性syscode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getSyscode() {
		 return syscode;
	  }   
	  
     /**
	   * 属性syscode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newSyscode String
	   */
	public void setSyscode(String newSyscode) {
		
		syscode = newSyscode;
	 } 	  
       
        /**
	   * 属性constatus的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getConstatus() {
		 return constatus;
	  }   
	  
     /**
	   * 属性constatus的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newConstatus String
	   */
	public void setConstatus(String newConstatus) {
		
		constatus = newConstatus;
	 } 	  
       
        /**
	   * 属性memorytable的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getMemorytable() {
		 return memorytable;
	  }   
	  
     /**
	   * 属性memorytable的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newMemorytable String
	   */
	public void setMemorytable(String newMemorytable) {
		
		memorytable = newMemorytable;
	 } 	  
       
        /**
	   * 属性backerrtab的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getBackerrtab() {
		 return backerrtab;
	  }   
	  
     /**
	   * 属性backerrtab的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newBackerrtab String
	   */
	public void setBackerrtab(String newBackerrtab) {
		
		backerrtab = newBackerrtab;
	 } 	  
       
        /**
	   * 属性dataname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDataname() {
		 return dataname;
	  }   
	  
     /**
	   * 属性dataname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDataname String
	   */
	public void setDataname(String newDataname) {
		
		dataname = newDataname;
	 } 	  
       
        /**
	   * 属性def_str_2的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_2() {
		 return def_str_2;
	  }   
	  
     /**
	   * 属性def_str_2的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_2 String
	   */
	public void setDef_str_2(String newDef_str_2) {
		
		def_str_2 = newDef_str_2;
	 } 	  
       
        /**
	   * 属性trancon的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return UFBoolean
	   */
	 public String getTrancon() {
		 return trancon;
	  }   
	  
     /**
	   * 属性trancon的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newTrancon UFBoolean
	   */
	public void setTrancon(String newTrancon) {
		
		trancon = newTrancon;
	 } 	  
       
        /**
	   * 属性format的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getFormat() {
		 return format;
	  }   
	  
     /**
	   * 属性format的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newFormat String
	   */
	public void setFormat(String newFormat) {
		
		format = newFormat;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-7
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_datarec_h == null) {
			errFields.add(new String("pk_datarec_h"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return "fpk";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_datarec_h";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_datarec_h";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-7
	  */
	public DipDatarecHVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-7
	 * @param newPk_datarec_h 主键值
	 */
	 public DipDatarecHVO(String newPk_datarec_h) {
		
		// 为主键字段赋值:
		 pk_datarec_h = newPk_datarec_h;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_datarec_h;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @param newPk_datarec_h  String    
	  */
	 public void setPrimaryKey(String newPk_datarec_h) {
				
				pk_datarec_h = newPk_datarec_h; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-7
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_datarec_h"; 
				
	 }

	public String getBackerrinfo() {
		return backerrinfo;
	}

	public void setBackerrinfo(String newBackerrinfo) {
		this.backerrinfo = newBackerrinfo;
	}

	public String getDatabakfile() {
		return databakfile;
	}

	public void setDatabakfile(String newDatabakfile) {
		this.databakfile = newDatabakfile;
	}

	public String getRepeatdata() {
		return repeatdata;
	}

	public void setRepeatdata(String newRepeatdata) {
		this.repeatdata = newRepeatdata;
	}

	public String getSourceparam() {
		return sourceparam;
	}

	public void setSourceparam(String newSourceparam) {
		this.sourceparam = newSourceparam;
	} 
	
	   /**
	   * 属性pk_datadefinit_h的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getPk_datadefinit_h() {
		 return pk_datadefinit_h;
	  }   
	  
   /**
	   * 属性pk_datadefinit_h的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newPk_datadefinit_h String
	   */
	public void setPk_datadefinit_h(String newPk_datadefinit_h) {
		
		pk_datadefinit_h = newPk_datadefinit_h;
	 }

	public String getFpk() {
		return fpk;
	}
	
	public void setFpk(String fpk) {
		this.fpk = fpk;
	}

	public Integer getDatamaptype() {
		return datamaptype;
	}

	public void setDatamaptype(Integer datamaptype) {
		this.datamaptype = datamaptype;
	}

	public HashMap getMap() {
		return map;
	}

	public void setMap(HashMap map) {
		this.map = map;
	}

	public String getTablename() {
		return tablename;
	}

	public void setTablename(String tablename) {
		this.tablename = tablename;
	}

	public String getIoflag() {
		return ioflag;
	}

	public void setIoflag(String ioflag) {
		this.ioflag = ioflag;
	}

	public UFBoolean getIsfolder() {
		return isfolder;
	}

	public void setIsfolder(UFBoolean isfolder) {
		this.isfolder = isfolder;
	}

	public String getPk_xt() {
		return pk_xt;
	}

	public void setPk_xt(String pk_xt) {
		this.pk_xt = pk_xt;
	}

		
	} 
