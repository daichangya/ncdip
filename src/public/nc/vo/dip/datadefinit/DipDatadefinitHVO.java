  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.datadefinit;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
import nc.vo.pub.*;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDateTime;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-7
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DipDatadefinitHVO extends SuperVO {
           
             public UFBoolean isdeploy;
             public String def_str_3;
             public String pk_sysregister_h;
             public String busicode;
             public String datatype;
             public String dispostatus;
             public Integer dr;
             public String def_str_4;
             public String deploycode;
             public String endstatus;
             public String citecolum;
             public String citetable;
             public String pk_datadefinit_h;
             public String syscode;
             public String sysname;
             public String ts;
             public String def_str_1;
             public String memorytable;
             public String deployname;
             public String def_str_2;
             public String state;
             public String memorytype;
             public String tabsoucetype;
             public String iscreatetab;
             public String pk_xt;
             public UFBoolean isfolder;
             public String is_dr;
             public String userdefined;
            
             public static final String  ISDEPLOY="isdeploy";   
             public static final String  DEF_STR_3="def_str_3";   
             public static final String  PK_SYSREGISTER_H="pk_sysregister_h";  
             public static final String  BUSICODE="busicode";   
             public static final String  DATATYPE="datatype"; 
             public static final String  DISPOSTATUS="dispostatus";   
             public static final String  DR="dr";   
             public static final String  DEF_STR_4="def_str_4";   
             public static final String  DEPLOYCODE="deploycode";   
             public static final String  ENDSTATUS="endstatus";   
             public static final String  CITECOLUM="citecolum";   
             public static final String  CITETABLE="citetable";   
             public static final String  PK_DATADEFINIT_H="pk_datadefinit_h";   
             public static final String  SYSCODE="syscode";   
             public static final String  SYSNAME="sysname";   
             public static final String  TS="ts";   
             public static final String  DEF_STR_1="def_str_1";   
             public static final String  MEMORYTABLE="memorytable";   
             public static final String  DEPLOYNAME="deployname";   
             public static final String  DEF_STR_2="def_str_2";   
             public static final String  MEMORYTYPE="memorytype";
             public static final String  PK_XT="pk_xt";
             public static final String  ISFOLDER="isfolder";
    
        public String getUserdefined() {
				return userdefined;
			}

			public void setUserdefined(String userdefined) {
				this.userdefined = userdefined;
			}

		public String getIs_dr() {
				return is_dr;
			}

			public void setIs_dr(String is_dr) {
				this.is_dr = is_dr;
			}

		/**
	   * 属性isdeploy的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public UFBoolean getIsdeploy() {
		 return isdeploy;
	  }   
	  
     /**
	   * 属性isdeploy的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newIsdeploy String
	   */
	public void setIsdeploy(UFBoolean newIsdeploy) {
		
		isdeploy = newIsdeploy;
	 } 	  
       
        /**
	   * 属性def_str_3的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_3() {
		 return def_str_3;
	  }   
	  
     /**
	   * 属性def_str_3的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_3 String
	   */
	public void setDef_str_3(String newDef_str_3) {
		
		def_str_3 = newDef_str_3;
	 } 	  
       
	   /**
	   * 属性pk_sysregister_h的Getter方法.
	   *
	   * 创建日期:2011-4-17
	   * @return String
	   */
	 public String getPk_sysregister_h() {
		 return pk_sysregister_h;
	  }   
	  
	 /**
	   * 属性pk_sysregister_h的Setter方法.
	   *
	   * 创建日期:2011-4-17
	   * @param newPk_sysregister_h String
	   */
	public void setPk_sysregister_h(String newPk_sysregister_h) {
		
		pk_sysregister_h = newPk_sysregister_h;
	 } 	  
     
        /**
	   * 属性busicode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getBusicode() {
		 return busicode;
	  }   
	  
     /**
	   * 属性busicode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newBusicode String
	   */
	public void setBusicode(String newBusicode) {
		
		busicode = newBusicode;
	 } 	  
       
        /**
	   * 属性datatype的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDatatype() {
		 return datatype;
	  }   
	  
     /**
	   * 属性datatype的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDatatype String
	   */
	public void setDatatype(String newDatatype) {
		
		datatype = newDatatype;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性def_str_4的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_4() {
		 return def_str_4;
	  }   
	  
     /**
	   * 属性def_str_4的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_4 String
	   */
	public void setDef_str_4(String newDef_str_4) {
		
		def_str_4 = newDef_str_4;
	 } 	  
       
        /**
	   * 属性deploycode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDeploycode() {
		 return deploycode;
	  }   
	  
     /**
	   * 属性deploycode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDeploycode String
	   */
	public void setDeploycode(String newDeploycode) {
		
		deploycode = newDeploycode;
	 } 	  
       
        /**
	   * 属性pk_datadefinit_h的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getPk_datadefinit_h() {
		 return pk_datadefinit_h;
	  }   
	  
     /**
	   * 属性pk_datadefinit_h的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newPk_datadefinit_h String
	   */
	public void setPk_datadefinit_h(String newPk_datadefinit_h) {
		
		pk_datadefinit_h = newPk_datadefinit_h;
	 } 	  
       
        /**
	   * 属性syscode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getSyscode() {
		 return syscode;
	  }   
	  
     /**
	   * 属性syscode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newSyscode String
	   */
	public void setSyscode(String newSyscode) {
		
		syscode = newSyscode;
	 } 	  
       
        /**
	   * 属性sysname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getSysname() {
		 return sysname;
	  }   
	  
     /**
	   * 属性sysname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newSysname String
	   */
	public void setSysname(String newSysname) {
		
		sysname = newSysname;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	}    
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newTs String
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性def_str_1的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_1() {
		 return def_str_1;
	  }   
	  
     /**
	   * 属性def_str_1的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_1 String
	   */
	public void setDef_str_1(String newDef_str_1) {
		
		def_str_1 = newDef_str_1;
	 } 	  
       
        /**
	   * 属性memorytable的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getMemorytable() {
		 return memorytable;
	  }   
	  
     /**
	   * 属性memorytable的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newMemorytable String
	   */
	public void setMemorytable(String newMemorytable) {
		
		memorytable = newMemorytable;
	 } 	  
       
        /**
	   * 属性deployname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDeployname() {
		 return deployname;
	  }   
	  
     /**
	   * 属性deployname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDeployname String
	   */
	public void setDeployname(String newDeployname) {
		
		deployname = newDeployname;
	 } 	  
       
        /**
	   * 属性def_str_2的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_2() {
		 return def_str_2;
	  }   
	  
     /**
	   * 属性def_str_2的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_2 String
	   */
	public void setDef_str_2(String newDef_str_2) {
		
		def_str_2 = newDef_str_2;
	 } 	  
	/**
	 * 属性 state 的 get方法
	 * 
	* 创建日期:2011-4-7
	   * @param  String
	 */
       
       
    public String getState() {
		return state;
	}
    /**
	   * 属性state的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param state String
	   */
	public void setState(String state) {
		this.state = state;
	}

	/**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-7
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_datadefinit_h";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_datadefinit_h";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-7
	  */
	public DipDatadefinitHVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-7
	 * @param newPk_datadefinit_h 主键值
	 */
	 public DipDatadefinitHVO(String newPk_datadefinit_h) {
		
		// 为主键字段赋值:
		 pk_datadefinit_h = newPk_datadefinit_h;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_datadefinit_h;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @param newPk_datadefinit_h  String    
	  */
	 public void setPrimaryKey(String newPk_datadefinit_h) {
				
				pk_datadefinit_h = newPk_datadefinit_h; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-7
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_datadefinit_h"; 
				
	 }

	public String getCitecolum() {
		return citecolum;
	}

	public void setCitecolum(String newCitecolum) {
		this.citecolum = newCitecolum;
	}

	public String getCitetable() {
		return citetable;
	}

	public void setCitetable(String newCitetable) {
		this.citetable = newCitetable;
	}

	public String getDispostatus() {
		return dispostatus;
	}

	public void setDispostatus(String newDispostatus) {
		this.dispostatus = newDispostatus ;
	}

	public String getEndstatus() {
		return endstatus;
	}

	public void setEndstatus(String newEndstatus) {
		this.endstatus = newEndstatus;
	}

	public String getMemorytype() {
		return memorytype;
	}

	public void setMemorytype(String memorytype) {
		this.memorytype = memorytype;
	}

	public String getIscreatetab() {
		return iscreatetab;
	}

	public void setIscreatetab(String iscreatetab) {
		this.iscreatetab = iscreatetab;
	}

	public String getTabsoucetype() {
		return tabsoucetype;
	}

	public void setTabsoucetype(String tabsoucetype) {
		this.tabsoucetype = tabsoucetype;
	}

	public String getPk_xt() {
		return pk_xt;
	}

	public void setPk_xt(String pk_xt) {
		this.pk_xt = pk_xt;
	}

	public UFBoolean getIsfolder() {
		return isfolder;
	}

	public void setIsfolder(UFBoolean isfolder) {
		this.isfolder = isfolder;
	} 
} 
