  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.sysregister;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
	import nc.vo.pub.*;
import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-2
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DipSysregisterHVO extends SuperVO {
           
             public String extcode;
             public String code;
             public String isdeploy;
//             public UFBoolean isdeploy;
             public String def_str_1;
             public String pk_fathsysregister;
             public String ts;
             public String pk_sysregister_h;
             public String extname;
             public Integer dr;
             public String def_str_2;
             public String extdesc;
            
             public static final String  EXTCODE="extcode";   
             public static final String  CODE="code";   
             public static final String  ISDEPLOY="isdeploy";   
             public static final String  DEF_STR_1="def_str_1";   
             public static final String  PK_FATHSYSREGISTER="pk_fathsysregister";   
             public static final String  TS="ts";   
             public static final String  PK_SYSREGISTER_H="pk_sysregister_h";   
             public static final String  EXTNAME="extname";   
             public static final String  DR="dr";   
             public static final String  DEF_STR_2="def_str_2";   
             public static final String  EXTDESC="extdesc";   
      
    
        /**
	   * 属性extcode的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getExtcode() {
		 return extcode;
	  }   
	  
     /**
	   * 属性extcode的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newExtcode String
	   */
	public void setExtcode(String newExtcode) {
		
		extcode = newExtcode;
	 } 	  
       
        /**
	   * 属性code的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getCode() {
		 return code;
	  }   
	  
     /**
	   * 属性code的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newCode String
	   */
	public void setCode(String newCode) {
		
		code = newCode;
	 } 	  
       
        /**
	   * 属性isdeploy的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return UFBoolean
	   */
	 public String getIsdeploy() {
		 return isdeploy;
	  } 
     /**
	   * 属性isdeploy的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newIsdeploy UFBoolean
	   */
	public void setIsdeploy(String newIsdeploy) {
		
		isdeploy = newIsdeploy;
	 } 	  
       
        /**
	   * 属性def_str_1的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getDef_str_1() {
		 return def_str_1;
	  }   
	  
     /**
	   * 属性def_str_1的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newDef_str_1 String
	   */
	public void setDef_str_1(String newDef_str_1) {
		
		def_str_1 = newDef_str_1;
	 } 	  
       
        /**
	   * 属性pk_fathsysregister的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getPk_fathsysregister() {
		 return pk_fathsysregister;
	  }   
	  
     /**
	   * 属性pk_fathsysregister的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newPk_fathsysregister String
	   */
	public void setPk_fathsysregister(String newPk_fathsysregister) {
		
		pk_fathsysregister = newPk_fathsysregister;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	}   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性pk_sysregister_h的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getPk_sysregister_h() {
		 return pk_sysregister_h;
	  }   
	  
     /**
	   * 属性pk_sysregister_h的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newPk_sysregister_h String
	   */
	public void setPk_sysregister_h(String newPk_sysregister_h) {
		
		pk_sysregister_h = newPk_sysregister_h;
	 } 	  
       
        /**
	   * 属性extname的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getExtname() {
		 return extname;
	  }   
	  
     /**
	   * 属性extname的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newExtname String
	   */
	public void setExtname(String newExtname) {
		
		extname = newExtname;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性def_str_2的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getDef_str_2() {
		 return def_str_2;
	  }   
	  
     /**
	   * 属性def_str_2的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newDef_str_2 String
	   */
	public void setDef_str_2(String newDef_str_2) {
		
		def_str_2 = newDef_str_2;
	 } 	  
       
        /**
	   * 属性extdesc的Getter方法.
	   *
	   * 创建日期:2011-4-2
	   * @return String
	   */
	 public String getExtdesc() {
		 return extdesc;
	  }   
	  
     /**
	   * 属性extdesc的Setter方法.
	   *
	   * 创建日期:2011-4-2
	   * @param newExtdesc String
	   */
	public void setExtdesc(String newExtdesc) {
		
		extdesc = newExtdesc;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-2
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_sysregister_h == null) {
			errFields.add(new String("pk_sysregister_h"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-2
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-2
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_sysregister_h";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-2
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_sysregister_h";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-2
	  */
	public DipSysregisterHVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-2
	 * @param newPk_sysregister_h 主键值
	 */
	 public DipSysregisterHVO(String newPk_sysregister_h) {
		
		// 为主键字段赋值:
		 pk_sysregister_h = newPk_sysregister_h;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-2
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_sysregister_h;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-2
	  * @param newPk_sysregister_h  String    
	  */
	 public void setPrimaryKey(String newPk_sysregister_h) {
				
				pk_sysregister_h = newPk_sysregister_h; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-2
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_sysregister_h"; 
				
	 } 
} 
