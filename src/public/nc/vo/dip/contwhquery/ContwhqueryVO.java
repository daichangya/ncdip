  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.contwhquery;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
import nc.vo.pub.*;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDateTime;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-5-12
 * @author author
 * @version Your Project 1.0
 */
     public class ContwhqueryVO extends SuperVO {
           
             public String vdef4;
             public String vdef7;
             public Integer dr;
             public String ename;
             public String cztype;
             public String vdef3;
             public String getvalue;
             public String vdef8;
             public String vdef2;
             public String pk_contdatawh_h;
             public String ts;
             public String vdef6;
             public String vdef1;
             public String vdef5;
             public String cname;
             public UFBoolean islock;
             public UFBoolean isref;
             public String userid;
             public String pk_datadefinit_h;
             public String kh;
             public String ope;
            
             public static final String  VDEF4="vdef4";   
             public static final String  VDEF7="vdef7";   
             public static final String  DR="dr";   
             public static final String  ENAME="ename";   
             public static final String  CZTYPE="cztype";   
             public static final String  VDEF3="vdef3";   
             public static final String  GETVALUE="getvalue";   
             public static final String  VDEF8="vdef8";   
             public static final String  VDEF2="vdef2";   
             public static final String  PK_CONTWHQUERY="pk_contwhquery";   
             public static final String  TS="ts";   
             public static final String  VDEF6="vdef6";   
             public static final String  VDEF1="vdef1";   
             public static final String  VDEF5="vdef5";   
             public static final String  CNAME="cname";   
      
    
        public String getPk_contdatawh_h() {
				return pk_contdatawh_h;
			}

			public void setPk_contdatawh_h(String pk_contdatawh_h) {
				this.pk_contdatawh_h = pk_contdatawh_h;
			}

			public String getKh() {
				return kh;
			}

			public void setKh(String kh) {
				this.kh = kh;
			}

			public String getOpe() {
				return ope;
			}

			public void setOpe(String ope) {
				this.ope = ope;
			}

		public String getUserid() {
				return userid;
			}

			public void setUserid(String userid) {
				this.userid = userid;
			}

			public String getPk_datadefinit_h() {
				return pk_datadefinit_h;
			}

			public void setPk_datadefinit_h(String pk_datadefinit_h) {
				this.pk_datadefinit_h = pk_datadefinit_h;
			}

		public UFBoolean getIsref() {
				return isref;
			}

			public void setIsref(UFBoolean isref) {
				this.isref = isref;
			}

		public UFBoolean getIslock() {
				return islock;
			}

			public void setIslock(UFBoolean islock) {
				this.islock = islock;
			}

		/**
	   * 属性vdef4的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef4() {
		 return vdef4;
	  }   
	  
     /**
	   * 属性vdef4的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef4 String
	   */
	public void setVdef4(String newVdef4) {
		
		vdef4 = newVdef4;
	 } 	  
       
        /**
	   * 属性vdef7的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef7() {
		 return vdef7;
	  }   
	  
     /**
	   * 属性vdef7的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef7 String
	   */
	public void setVdef7(String newVdef7) {
		
		vdef7 = newVdef7;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性ename的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getEname() {
		 return ename;
	  }   
	  
     /**
	   * 属性ename的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newEname String
	   */
	public void setEname(String newEname) {
		
		ename = newEname;
	 } 	  
       
        /**
	   * 属性cztype的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getCztype() {
		 return cztype;
	  }   
	  
     /**
	   * 属性cztype的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newCztype String
	   */
	public void setCztype(String newCztype) {
		
		cztype = newCztype;
	 } 	  
       
        /**
	   * 属性vdef3的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef3() {
		 return vdef3;
	  }   
	  
     /**
	   * 属性vdef3的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef3 String
	   */
	public void setVdef3(String newVdef3) {
		
		vdef3 = newVdef3;
	 } 	  
       
        /**
	   * 属性getvalue的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getGetvalue() {
		 return getvalue;
	  }   
	  
     /**
	   * 属性getvalue的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newGetvalue String
	   */
	public void setGetvalue(String newGetvalue) {
		
		getvalue = newGetvalue;
	 } 	  
       
        /**
	   * 属性vdef8的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef8() {
		 return vdef8;
	  }   
	  
     /**
	   * 属性vdef8的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef8 String
	   */
	public void setVdef8(String newVdef8) {
		
		vdef8 = newVdef8;
	 } 	  
       
        /**
	   * 属性vdef2的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef2() {
		 return vdef2;
	  }   
	  
     /**
	   * 属性vdef2的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef2 String
	   */
	public void setVdef2(String newVdef2) {
		
		vdef2 = newVdef2;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	} 
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性vdef6的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef6() {
		 return vdef6;
	  }   
	  
     /**
	   * 属性vdef6的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef6 String
	   */
	public void setVdef6(String newVdef6) {
		
		vdef6 = newVdef6;
	 } 	  
       
        /**
	   * 属性vdef1的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef1() {
		 return vdef1;
	  }   
	  
     /**
	   * 属性vdef1的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef1 String
	   */
	public void setVdef1(String newVdef1) {
		
		vdef1 = newVdef1;
	 } 	  
       
        /**
	   * 属性vdef5的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getVdef5() {
		 return vdef5;
	  }   
	  
     /**
	   * 属性vdef5的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newVdef5 String
	   */
	public void setVdef5(String newVdef5) {
		
		vdef5 = newVdef5;
	 } 	  
       
        /**
	   * 属性cname的Getter方法.
	   *
	   * 创建日期:2011-5-12
	   * @return String
	   */
	 public String getCname() {
		 return cname;
	  }   
	  
     /**
	   * 属性cname的Setter方法.
	   *
	   * 创建日期:2011-5-12
	   * @param newCname String
	   */
	public void setCname(String newCname) {
		
		cname = newCname;
	 } 	  
       
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-5-12
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-5-12
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_contdatawh_h";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-5-12
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_contdatawh_h";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-5-12
	  */
	public ContwhqueryVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-5-12
	 * @param newPk_contwhquery 主键值
	 */
	 public ContwhqueryVO(String newPk_contdatawh_h) {
		
		// 为主键字段赋值:
		 pk_contdatawh_h = newPk_contdatawh_h;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-5-12
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_contdatawh_h;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-5-12
	  * @param newPk_contwhquery  String    
	  */
	 public void setPrimaryKey(String newPk_contdatawh_h) {
				
		 pk_contdatawh_h = newPk_contdatawh_h; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-5-12
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_contdatawh_h"; 
				
	 } 
} 
