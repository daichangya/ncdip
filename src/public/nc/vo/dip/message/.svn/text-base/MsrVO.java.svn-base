  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.message;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
	import nc.vo.pub.*;
import nc.vo.pub.lang.*;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-5-18
 * @author author
 * @version Your Project 1.0
 */
     public class MsrVO extends SuperVO {
           
             /**
	 * 
	 */
	private static final long serialVersionUID = -2223169785929753366L;
			public UFBoolean vdef4;//是否加密
             public String address;
             public String vdef7;
             public Integer duankou;
             public Integer dr;
             public String vdef3;
             public String pk_dip_msr;
             public String vdef9;//设置消息属性
             public String impclass;
             public String uname;
             public String vdef8;//设置文件属性
             public String code;
             public String vdef2;
             public String ts;
             public String vdef6;
             public String upass;
             public String vdef1;
             public UFBoolean vdef10;//是否路由
             public String vdef5;
             public String name;
             public String mestype;
             public String fgbj;
             public String canShuSend;//测试发送的时候，从参数表中读取数据。
             public Integer cnaShuCount;//测试发送的时候，要循环发送多少次。
             public String filename;//文件名称
             public String createfilerule;//创建文件规则
             public String savefilepath;//保存文件路径
             public String messageplug;//消息插件注册标志
            
             public static final String FGBJ="fgbj";
             public static final String MESTYPE="mestype";
             public static final String  VDEF4="vdef4";   
             public static final String  ADDRESS="address";   
             public static final String  VDEF7="vdef7";   
             public static final String  DUANKOU="duankou";   
             public static final String  DR="dr";   
             public static final String  VDEF3="vdef3";   
             public static final String  PK_DIP_MSR="pk_dip_msr";   
             public static final String  VDEF9="vdef9";   
             public static final String  IMPCLASS="impclass";   
             public static final String  UNAME="uname";   
             public static final String  VDEF8="vdef8";   
             public static final String  CODE="code";   
             public static final String  VDEF2="vdef2";   
             public static final String  TS="ts";   
             public static final String  VDEF6="vdef6";   
             public static final String  UPASS="upass";   
             public static final String  VDEF1="vdef1";   
             public static final String  VDEF10="vdef10";   
             public static final String  VDEF5="vdef5";   
             public static final String  NAME="name";   
             public static final String  CANSHUSEND="canShuSend";
             public static final String  CANSHUCOUNT="canShuCount";
             public static final String FILENAME="filename";
             public static final String CREATEFILERULE="createfilerule";
             public static final String SAVEFILEPATH="savefilepath";
             public static final String MESSAGEPLUG="messageplug";
    
        public Integer getCnaShuCount() {
				return cnaShuCount;
			}

			public void setCnaShuCount(Integer cnaShuCount) {
				this.cnaShuCount = cnaShuCount;
			}

		public String getFgbj() {
				return fgbj;
			}

			public void setFgbj(String fgbj) {
				this.fgbj = fgbj;
			}

			public String getMestype() {
				return mestype;
			}

			public void setMestype(String mestype) {
				this.mestype = mestype;
			}

		/**
	   * 属性vdef4的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public UFBoolean getVdef4() {
		 return vdef4;
	  }   
	  
     /**
	   * 属性vdef4的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef4 String
	   */
	public void setVdef4(UFBoolean newVdef4) {
		
		vdef4 = newVdef4;
	 } 	  
       
        /**
	   * 属性address的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getAddress() {
		 return address;
	  }   
	  
     /**
	   * 属性address的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newAddress String
	   */
	public void setAddress(String newAddress) {
		
		address = newAddress;
	 } 	  
       
        /**
	   * 属性vdef7的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef7() {
		 return vdef7;
	  }   
	  
     /**
	   * 属性vdef7的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef7 String
	   */
	public void setVdef7(String newVdef7) {
		
		vdef7 = newVdef7;
	 } 	  
       
        /**
	   * 属性duankou的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public Integer getDuankou() {
		 return duankou;
	  }   
	  
     /**
	   * 属性duankou的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newDuankou String
	   */
	public void setDuankou(Integer newDuankou) {
		
		duankou = newDuankou;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性vdef3的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef3() {
		 return vdef3;
	  }   
	  
     /**
	   * 属性vdef3的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef3 String
	   */
	public void setVdef3(String newVdef3) {
		
		vdef3 = newVdef3;
	 } 	  
       
        /**
	   * 属性pk_dip_msr的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getPk_dip_msr() {
		 return pk_dip_msr;
	  }   
	  
     /**
	   * 属性pk_dip_msr的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newPk_dip_msr String
	   */
	public void setPk_dip_msr(String newPk_dip_msr) {
		
		pk_dip_msr = newPk_dip_msr;
	 } 	  
       
        /**
	   * 属性vdef9的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef9() {
		 return vdef9;
	  }   
	  
     /**
	   * 属性vdef9的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef9 String
	   */
	public void setVdef9(String newVdef9) {
		
		vdef9 = newVdef9;
	 } 	  
       
        /**
	   * 属性impclass的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getImpclass() {
		 return impclass;
	  }   
	  
     /**
	   * 属性impclass的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newImpclass String
	   */
	public void setImpclass(String newImpclass) {
		
		impclass = newImpclass;
	 } 	  
       
        /**
	   * 属性uname的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getUname() {
		 return uname;
	  }   
	  
     /**
	   * 属性uname的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newUname String
	   */
	public void setUname(String newUname) {
		
		uname = newUname;
	 } 	  
       
        /**
	   * 属性vdef8的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef8() {
		 return vdef8;
	  }   
	  
     /**
	   * 属性vdef8的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef8 String
	   */
	public void setVdef8(String newVdef8) {
		
		vdef8 = newVdef8;
	 } 	  
       
        /**
	   * 属性code的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getCode() {
		 return code;
	  }   
	  
     /**
	   * 属性code的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newCode String
	   */
	public void setCode(String newCode) {
		
		code = newCode;
	 } 	  
       
        /**
	   * 属性vdef2的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef2() {
		 return vdef2;
	  }   
	  
     /**
	   * 属性vdef2的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef2 String
	   */
	public void setVdef2(String newVdef2) {
		
		vdef2 = newVdef2;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	}   
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性vdef6的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef6() {
		 return vdef6;
	  }   
	  
     /**
	   * 属性vdef6的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef6 String
	   */
	public void setVdef6(String newVdef6) {
		
		vdef6 = newVdef6;
	 } 	  
       
        /**
	   * 属性upass的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getUpass() {
		 return upass;
	  }   
	  
     /**
	   * 属性upass的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newUpass String
	   */
	public void setUpass(String newUpass) {
		
		upass = newUpass;
	 } 	  
       
        /**
	   * 属性vdef1的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef1() {
		 return vdef1;
	  }   
	  
     /**
	   * 属性vdef1的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef1 String
	   */
	public void setVdef1(String newVdef1) {
		
		vdef1 = newVdef1;
	 } 	  
       
        /**
	   * 属性vdef10的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public UFBoolean getVdef10() {
		 return vdef10;
	  }   
	  
     /**
	   * 属性vdef10的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef10 String
	   */
	public void setVdef10(UFBoolean newVdef10) {
		
		vdef10 = newVdef10;
	 } 	  
       
        /**
	   * 属性vdef5的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getVdef5() {
		 return vdef5;
	  }   
	  
     /**
	   * 属性vdef5的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newVdef5 String
	   */
	public void setVdef5(String newVdef5) {
		
		vdef5 = newVdef5;
	 } 	  
       
        /**
	   * 属性name的Getter方法.
	   *
	   * 创建日期:2011-5-18
	   * @return String
	   */
	 public String getName() {
		 return name;
	  }   
	  
     /**
	   * 属性name的Setter方法.
	   *
	   * 创建日期:2011-5-18
	   * @param newName String
	   */
	public void setName(String newName) {
		
		name = newName;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-5-18
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_dip_msr == null) {
			errFields.add(new String("pk_dip_msr"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-5-18
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return null;
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-5-18
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_dip_msr";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-5-18
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_msr";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-5-18
	  */
	public MsrVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-5-18
	 * @param newPk_dip_msr 主键值
	 */
	 public MsrVO(String newPk_dip_msr) {
		
		// 为主键字段赋值:
		 pk_dip_msr = newPk_dip_msr;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-5-18
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_dip_msr;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-5-18
	  * @param newPk_dip_msr  String    
	  */
	 public void setPrimaryKey(String newPk_dip_msr) {
				
				pk_dip_msr = newPk_dip_msr; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-5-18
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_msr"; 
				
	 }

	public String getCanShuSend() {
		return canShuSend;
	}

	public void setCanShuSend(String canShuSend) {
		this.canShuSend = canShuSend;
	}

	public String getCreatefilerule() {
		return createfilerule;
	}

	public void setCreatefilerule(String createfilerule) {
		this.createfilerule = createfilerule;
	}

	public String getFilename() {
		return filename;
	}

	public void setFilename(String filename) {
		this.filename = filename;
	}

	public String getMessageplug() {
		return messageplug;
	}

	public void setMessageplug(String messageplug) {
		this.messageplug = messageplug;
	}

	public String getSavefilepath() {
		return savefilepath;
	}

	public void setSavefilepath(String savefilepath) {
		this.savefilepath = savefilepath;
	} 
	
} 
