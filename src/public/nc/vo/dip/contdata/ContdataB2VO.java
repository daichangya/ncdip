/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
package nc.vo.dip.contdata;

import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.SuperVO;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFDateTime;

/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-5-7
 * @author author
 * @version Your Project 1.0
 */
public class ContdataB2VO extends SuperVO {

	public String extesysfield;
	public String vdef4;
	public String vdef7;
	public Integer dr;
	public String vdef3;
	public String vdef9;
	public String vdef8;
	public String vdef2;
	public Integer extesysfieldlen;
	public String pk_contdata_b2;
	public String ts;
	public String vdef6;
	public String vdef10;
	public String pk_contdata_h;
	public String vdef1;
	public String vdef5;

	public static final String  EXTESYSFIELD="extesysfield";   
	public static final String  VDEF4="vdef4";   
	public static final String  VDEF7="vdef7";   
	public static final String  DR="dr";   
	public static final String  VDEF3="vdef3";   
	public static final String  VDEF9="vdef9";   
	public static final String  VDEF8="vdef8";   
	public static final String  VDEF2="vdef2";   
	public static final String  EXTESYSFIELDLEN="extesysfieldlen";   
	public static final String  PK_CONTDATA_B2="pk_contdata_b2";   
	public static final String  TS="ts";   
	public static final String  VDEF6="vdef6";   
	public static final String  VDEF10="vdef10";   
	public static final String  PK_CONTDATA_H="pk_contdata_h";   
	public static final String  VDEF1="vdef1";   
	public static final String  VDEF5="vdef5";   


	/**
	 * 属性extesysfield的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getExtesysfield() {
		return extesysfield;
	}   

	/**
	 * 属性extesysfield的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newExtesysfield String
	 */
	public void setExtesysfield(String newExtesysfield) {

		extesysfield = newExtesysfield;
	} 	  

	/**
	 * 属性vdef4的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef4() {
		return vdef4;
	}   

	/**
	 * 属性vdef4的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef4 String
	 */
	public void setVdef4(String newVdef4) {

		vdef4 = newVdef4;
	} 	  

	/**
	 * 属性vdef7的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef7() {
		return vdef7;
	}   

	/**
	 * 属性vdef7的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef7 String
	 */
	public void setVdef7(String newVdef7) {

		vdef7 = newVdef7;
	} 	  

	/**
	 * 属性dr的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return Integer
	 */
	public Integer getDr() {
		return dr;
	}   

	/**
	 * 属性dr的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newDr Integer
	 */
	public void setDr(Integer newDr) {

		dr = newDr;
	} 	  

	/**
	 * 属性vdef3的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef3() {
		return vdef3;
	}   

	/**
	 * 属性vdef3的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef3 String
	 */
	public void setVdef3(String newVdef3) {

		vdef3 = newVdef3;
	} 	  

	/**
	 * 属性vdef9的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef9() {
		return vdef9;
	}   

	/**
	 * 属性vdef9的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef9 String
	 */
	public void setVdef9(String newVdef9) {

		vdef9 = newVdef9;
	} 	  

	/**
	 * 属性vdef8的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef8() {
		return vdef8;
	}   

	/**
	 * 属性vdef8的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef8 String
	 */
	public void setVdef8(String newVdef8) {

		vdef8 = newVdef8;
	} 	  

	/**
	 * 属性vdef2的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef2() {
		return vdef2;
	}   

	/**
	 * 属性vdef2的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef2 String
	 */
	public void setVdef2(String newVdef2) {

		vdef2 = newVdef2;
	} 	  

	/**
	 * 属性extesysfieldlen的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public Integer getExtesysfieldlen() {
		return extesysfieldlen;
	}   

	/**
	 * 属性extesysfieldlen的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newExtesysfieldlen String
	 */
	public void setExtesysfieldlen(Integer newExtesysfieldlen) {

		extesysfieldlen = newExtesysfieldlen;
	} 	  

	/**
	 * 属性pk_contdata_b2的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getPk_contdata_b2() {
		return pk_contdata_b2;
	}   

	/**
	 * 属性pk_contdata_b2的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newPk_contdata_b2 String
	 */
	public void setPk_contdata_b2(String newPk_contdata_b2) {

		pk_contdata_b2 = newPk_contdata_b2;
	} 	  

	/**
	 * 属性ts的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return UFDateTime
	 */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	}   

	/**
	 * 属性ts的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newTs UFDateTime
	 */
	public void setTs(String newTs) {

		ts = newTs;
	} 	  

	/**
	 * 属性vdef6的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef6() {
		return vdef6;
	}   

	/**
	 * 属性vdef6的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef6 String
	 */
	public void setVdef6(String newVdef6) {

		vdef6 = newVdef6;
	} 	  

	/**
	 * 属性vdef10的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef10() {
		return vdef10;
	}   

	/**
	 * 属性vdef10的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef10 String
	 */
	public void setVdef10(String newVdef10) {

		vdef10 = newVdef10;
	} 	  

	/**
	 * 属性pk_contdata_h的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getPk_contdata_h() {
		return pk_contdata_h;
	}   

	/**
	 * 属性pk_contdata_h的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newPk_contdata_h String
	 */
	public void setPk_contdata_h(String newPk_contdata_h) {

		pk_contdata_h = newPk_contdata_h;
	} 	  

	/**
	 * 属性vdef1的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef1() {
		return vdef1;
	}   

	/**
	 * 属性vdef1的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef1 String
	 */
	public void setVdef1(String newVdef1) {

		vdef1 = newVdef1;
	} 	  

	/**
	 * 属性vdef5的Getter方法.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getVdef5() {
		return vdef5;
	}   

	/**
	 * 属性vdef5的Setter方法.
	 *
	 * 创建日期:2011-5-7
	 * @param newVdef5 String
	 */
	public void setVdef5(String newVdef5) {

		vdef5 = newVdef5;
	} 	  


	/**
	 * 验证对象各属性之间的数据逻辑正确性.
	 *
	 * 创建日期:2011-5-7
	 * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	 * ValidationException,对错误进行解释.
	 */
	public void validate() throws ValidationException {

		ArrayList errFields = new ArrayList(); // errFields record those null

		// fields that cannot be null.
		// 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
		if (pk_contdata_b2 == null) {
			errFields.add(new String("pk_contdata_b2"));
		}	


		StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
			String[] temp = (String[]) errFields.toArray(new String[0]);
			message.append(temp[0]);
			for ( int i= 1; i < temp.length; i++ ) {
				message.append(",");
				message.append(temp[i]);
			}
			throw new NullFieldException(message.toString());
		}
	}


	/**
	 * <p>取得父VO主键字段.
	 * <p>
	 * 创建日期:2011-5-7
	 * @return java.lang.String
	 */
	public java.lang.String getParentPKFieldName() {

		return "pk_contdata_h";

	}   

	/**
	 * <p>取得表主键.
	 * <p>
	 * 创建日期:2011-5-7
	 * @return java.lang.String
	 */
	public java.lang.String getPKFieldName() {
		return "pk_contdata_b2";
	}

	/**
	 * <p>返回表名称.
	 * <p>
	 * 创建日期:2011-5-7
	 * @return java.lang.String
	 */
	public java.lang.String getTableName() {

		return "dip_contdata_b2";
	}    

	/**
	 * 按照默认方式创建构造子.
	 *
	 * 创建日期:2011-5-7
	 */
	public ContdataB2VO() {

		super();	
	}   

	/**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-5-7
	 * @param newPk_datadefinit_b 主键值
	 */
	public ContdataB2VO(String newPk_contdata_b2) {

		// 为主键字段赋值:
		pk_contdata_b2 = newPk_contdata_b2;

	}


	/**
	 * 返回对象标识,用来唯一定位对象.
	 *
	 * 创建日期:2011-5-7
	 * @return String
	 */
	public String getPrimaryKey() {

		return pk_contdata_b2;

	}

	/**
	 * 设置对象标识,用来唯一定位对象.
	 *
	 * 创建日期:2011-5-7
	 * @param newPk_datadefinit_b  String    
	 */
	public void setPrimaryKey(String newPk_contdata_b2) {

		pk_contdata_b2 = newPk_contdata_b2; 

	} 


	/**
	 * 返回数值对象的显示名称.
	 *
	 * 创建日期:2011-5-7
	 * @return java.lang.String 返回数值对象的显示名称.
	 */
	public String getEntityName() {

		return "dip_contdata_b2"; 

	} 
} 
