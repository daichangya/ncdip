  /***************************************************************\
  *     The skeleton of this class is generated by an automatic *
  * code generator for NC product. It is based on Velocity.     *
  \***************************************************************/
      	package nc.vo.dip.contdata;
   	
	import java.util.ArrayList;

import nc.util.dip.sj.IContrastUtil;
import nc.vo.pub.*;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDateTime;
	
/**
 * <b> 在此处简要描述此类的功能 </b>
 *
 * <p>
 *     在此处添加此类的描述信息
 * </p>
 *
 * 创建日期:2011-4-7
 * @author ${vmObject.author}
 * @version Your Project 1.0
 */
     public class DipContdataVO extends SuperVO {
           
             public String extecolname;
             /**
              * 对照表的对照字段，数据定义子表主键pk_datadefinit_b
              */
             public String contcolcode;
             public String def_str_3;//
             public String contcolname;
             public Integer dr;
             public String def_str_4;
             public String code;
             public String extesys;
             public String middletab;
             public String contabname;
             public String extetabname;
			 /**
			  * 对照表的数据定义主表主键pk_datadefinit_h 
			  */
             public String contabcode;
             /**
              * 是否自动对照
              */
             public String def_str_1;
             public String ts;
             /**
              * 被对照表的数据定义主表主键pk_datadefinit_h
              */
             public String extetabcode;
             public String pk_contdata_h;
             public String contsys;
             public String def_str_2;
             public String name;
             /**
              * 被对照表的被对照字段，数据定义子表主键pk_datadefinit_b
              */
             public String extecolcode;
             public String pk_sysregister_h;
             public String concodefiled;
             public String connamefiled;
             public String exteconcodefiled;
             public String exteconnamefiled;
             public String fpk;
             public String tasktype;
             public String pk_xt;
             public UFBoolean isfolder;
             /**
              * add by zhw 2012-05-23 增加删除类型字段
              */
             public String deletetype;
            
             public static final String  EXTECOLNAME="extecolname";   
             public static final String  CONTCOLCODE="contcolcode";   
             public static final String  DEF_STR_3="def_str_3";   
             public static final String  CONTCOLNAME="contcolname";   
             public static final String  DR="dr";   
             public static final String  DEF_STR_4="def_str_4";   
             public static final String  CODE="code";   
             public static final String  EXTESYS="extesys";   
             public static final String  MIDDLETAB="middletab";   
             public static final String  CONTABNAME="contabname";   
             public static final String  EXTETABNAME="extetabname";   
             public static final String  CONTABCODE="contabcode";   
             public static final String  DEF_STR_1="def_str_1";   
             public static final String  TS="ts";   
             public static final String  EXTETABCODE="extetabcode";   
             public static final String  PK_CONTDATA_H="pk_contdata_h";   
             public static final String  CONTSYS="contsys";   
             public static final String  DEF_STR_2="def_str_2";   
             public static final String  NAME="name";   
             public static final String  EXTECOLCODE="extecolcode";   
             public static final String  PK_SYSREGISTER_H="pk_sysregister_h";
             public static final String  CONCODEFILED="concodefiled";
             public static final String  CONNAMEFILED="connamefiled";
             public static final String  EXTECONCODEFILED="exteconcodefiled";
             public static final String  EXTECONNAMEFILED="exteconnamefiled";
             public static final String PK_XT="pk_xt";
             public static final String ISFOLDER="isfolder";
             public static final String DELETETYPE="deletetype";
      
    
             
        public String getDeletetype() {
				return deletetype;
			}

			public void setDeletetype(String deletetype) {
				this.deletetype = deletetype;
			}

		public UFBoolean getIsfolder() {
				return isfolder;
			}

			public void setIsfolder(UFBoolean isfolder) {
				this.isfolder = isfolder;
			}

			public String getPk_xt() {
				return pk_xt;
			}

			public void setPk_xt(String pk_xt) {
				this.pk_xt = pk_xt;
			}

		public String getConcodefiled() {
				return concodefiled;
			}

			public void setConcodefiled(String concodefiled) {
				this.concodefiled = concodefiled;
			}

			public String getConnamefiled() {
				return connamefiled;
			}

			public void setConnamefiled(String connamefiled) {
				this.connamefiled = connamefiled;
			}

			public String getExteconcodefiled() {
				return exteconcodefiled;
			}

			public void setExteconcodefiled(String exteconcodefiled) {
				this.exteconcodefiled = exteconcodefiled;
			}

			public String getExteconnamefiled() {
				return exteconnamefiled;
			}

			public void setExteconnamefiled(String exteconnamefiled) {
				this.exteconnamefiled = exteconnamefiled;
			}

		/**
	   * 属性extecolname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getExtecolname() {
		 return extecolname;
	  }   
	  
     /**
	   * 属性extecolname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newExtecolname String
	   */
	public void setExtecolname(String newExtecolname) {
		
		extecolname = newExtecolname;
	 } 	  
       
        /**
	   * 属性contcolcode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getContcolcode() {
		 return contcolcode;
	  }   
	  
     /**
	   * 属性contcolcode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newContcolcode String
	   */
	public void setContcolcode(String newContcolcode) {
		
		contcolcode = newContcolcode;
	 } 	  
       
        /**
	   * 属性def_str_3的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_3() {
		 return def_str_3;
	  }   
	  
     /**
	   * 属性def_str_3的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_3 String
	   */
	public void setDef_str_3(String newDef_str_3) {
		
		def_str_3 = newDef_str_3;
	 } 	  
       
        /**
	   * 属性contcolname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getContcolname() {
		 return contcolname;
	  }   
	  
     /**
	   * 属性contcolname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newContcolname String
	   */
	public void setContcolname(String newContcolname) {
		
		contcolname = newContcolname;
	 } 	  
       
        /**
	   * 属性dr的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return Integer
	   */
	 public Integer getDr() {
		 return dr;
	  }   
	  
     /**
	   * 属性dr的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDr Integer
	   */
	public void setDr(Integer newDr) {
		
		dr = newDr;
	 } 	  
       
        /**
	   * 属性def_str_4的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_4() {
		 return def_str_4;
	  }   
	  
     /**
	   * 属性def_str_4的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_4 String
	   */
	public void setDef_str_4(String newDef_str_4) {
		
		def_str_4 = newDef_str_4;
	 } 	  
       
        /**
	   * 属性code的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getCode() {
		 return code;
	  }   
	  
     /**
	   * 属性code的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newCode String
	   */
	public void setCode(String newCode) {
		
		code = newCode;
	 } 	  
       
        /**
	   * 属性extesys的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getExtesys() {
		 return extesys;
	  }   
	  
     /**
	   * 属性extesys的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newExtesys String
	   */
	public void setExtesys(String newExtesys) {
		
		extesys = newExtesys;
	 } 	  
       
        /**
	   * 属性middletab的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getMiddletab() {
		 return middletab;
	  }   
	  
     /**
	   * 属性middletab的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newMiddletab String
	   */
	public void setMiddletab(String newMiddletab) {
		
		middletab = newMiddletab;
	 } 	  
       
        /**
	   * 属性contabname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getContabname() {
		 return contabname;
	  }   
	  
     /**
	   * 属性contabname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newContabname String
	   */
	public void setContabname(String newContabname) {
		
		contabname = newContabname;
	 } 	  
       
        /**
	   * 属性extetabname的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getExtetabname() {
		 return extetabname;
	  }   
	  
     /**
	   * 属性extetabname的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newExtetabname String
	   */
	public void setExtetabname(String newExtetabname) {
		
		extetabname = newExtetabname;
	 } 	  
       
        /**
	   * 属性contabcode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getContabcode() {
		 return contabcode;
	  }   
	  
     /**
	   * 属性contabcode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newContabcode String
	   */
	public void setContabcode(String newContabcode) {
		
		contabcode = newContabcode;
	 } 	  
       
        /**
	   * 属性def_str_1的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_1() {
		 return def_str_1;
	  }   
	  
     /**
	   * 属性def_str_1的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_1 String
	   */
	public void setDef_str_1(String newDef_str_1) {
		
		def_str_1 = newDef_str_1;
	 } 	  
       
        /**
	   * 属性ts的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return UFDateTime
	   */
	public Object getTs() {
		if(ts==null){
			return null;
		}else{
			if(IContrastUtil.VERSION.equals("nc502")){
				  return new UFDateTime(ts);
			  }else if(IContrastUtil.VERSION.equals("nc507")){
				  return ts;  
			  }
		}
		return ts;
	} 
	  
     /**
	   * 属性ts的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newTs UFDateTime
	   */
	public void setTs(String newTs) {
		
		ts = newTs;
	 } 	  
       
        /**
	   * 属性extetabcode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getExtetabcode() {
		 return extetabcode;
	  }   
	  
     /**
	   * 属性extetabcode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newExtetabcode String
	   */
	public void setExtetabcode(String newExtetabcode) {
		
		extetabcode = newExtetabcode;
	 } 	  
       
        /**
	   * 属性pk_contdata_h的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getPk_contdata_h() {
		 return pk_contdata_h;
	  }   
	  
     /**
	   * 属性pk_contdata_h的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newPk_contdata_h String
	   */
	public void setPk_contdata_h(String newPk_contdata_h) {
		
		pk_contdata_h = newPk_contdata_h;
	 } 	  
       
        /**
	   * 属性contsys的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getContsys() {
		 return contsys;
	  }   
	  
     /**
	   * 属性contsys的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newContsys String
	   */
	public void setContsys(String newContsys) {
		
		contsys = newContsys;
	 } 	  
       
        /**
	   * 属性def_str_2的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getDef_str_2() {
		 return def_str_2;
	  }   
	  
     /**
	   * 属性def_str_2的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newDef_str_2 String
	   */
	public void setDef_str_2(String newDef_str_2) {
		
		def_str_2 = newDef_str_2;
	 } 	  
       
        /**
	   * 属性name的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getName() {
		 return name;
	  }   
	  
     /**
	   * 属性name的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newName String
	   */
	public void setName(String newName) {
		
		name = newName;
	 } 	  
       
        /**
	   * 属性extecolcode的Getter方法.
	   *
	   * 创建日期:2011-4-7
	   * @return String
	   */
	 public String getExtecolcode() {
		 return extecolcode;
	  }   
	  
     /**
	   * 属性extecolcode的Setter方法.
	   *
	   * 创建日期:2011-4-7
	   * @param newExtecolcode String
	   */
	public void setExtecolcode(String newExtecolcode) {
		
		extecolcode = newExtecolcode;
	 } 	  
       
       
    /**
	  * 验证对象各属性之间的数据逻辑正确性.
	  *
	  * 创建日期:2011-4-7
	  * @exception nc.vo.pub.ValidationException 如果验证失败,抛出
	  * ValidationException,对错误进行解释.
	 */
	 public void validate() throws ValidationException {
	
	 	ArrayList errFields = new ArrayList(); // errFields record those null

                                                      // fields that cannot be null.
       		  // 检查是否为不允许空的字段赋了空值,你可能需要修改下面的提示信息:
	
	   		if (pk_contdata_h == null) {
			errFields.add(new String("pk_contdata_h"));
			  }	
	   	
	    StringBuffer message = new StringBuffer();
		message.append("下列字段不能为空:");
		if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for ( int i= 1; i < temp.length; i++ ) {
			message.append(",");
			message.append(temp[i]);
		}
		throw new NullFieldException(message.toString());
		}
	 }
			   
       
   	/**
	  * <p>取得父VO主键字段.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getParentPKFieldName() {
	  	 
	 	    return "fpk";
	 	
	}   
    
    /**
	  * <p>取得表主键.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	  */
	public java.lang.String getPKFieldName() {
	 	  return "pk_contdata_h";
	 	}
    
	/**
      * <p>返回表名称.
	  * <p>
	  * 创建日期:2011-4-7
	  * @return java.lang.String
	 */
	public java.lang.String getTableName() {
				
		return "dip_contdata";
	}    
    
    /**
	  * 按照默认方式创建构造子.
	  *
	  * 创建日期:2011-4-7
	  */
	public DipContdataVO() {
			
			   super();	
	  }    
    
            /**
	 * 使用主键进行初始化的构造子.
	 *
	 * 创建日期:2011-4-7
	 * @param newPk_contdata_h 主键值
	 */
	 public DipContdataVO(String newPk_contdata_h) {
		
		// 为主键字段赋值:
		 pk_contdata_h = newPk_contdata_h;
	
    	}
    
     
     /**
	  * 返回对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @return String
	  */
	   public String getPrimaryKey() {
				
		 return pk_contdata_h;
	   
	   }

     /**
	  * 设置对象标识,用来唯一定位对象.
	  *
	  * 创建日期:2011-4-7
	  * @param newPk_contdata_h  String    
	  */
	 public void setPrimaryKey(String newPk_contdata_h) {
				
				pk_contdata_h = newPk_contdata_h; 
				
	 } 
           
	  /**
       * 返回数值对象的显示名称.
	   *
	   * 创建日期:2011-4-7
	   * @return java.lang.String 返回数值对象的显示名称.
	   */
	 public String getEntityName() {
				
	   return "dip_contdata"; 
				
	 } 
	 
	 
	 /**
	  * 2011-4-19 cl
	  * 增加系统注册主表主键
	  */
	   /**
	   * 属性pk_sysregister_h的Getter方法.
	   *
	   * 创建日期:2011-4-17
	   * @return String
	   */
	 public String getPk_sysregister_h() {
		 return pk_sysregister_h;
	  }   
	  
	 /**
	   * 属性pk_sysregister_h的Setter方法.
	   *
	   * 创建日期:2011-4-17
	   * @param newPk_sysregister_h String
	   */
	public void setPk_sysregister_h(String newPk_sysregister_h) {
		
		pk_sysregister_h = newPk_sysregister_h;
	 }

	public String getFpk() {
		return fpk;
	}

	public void setFpk(String fpk) {
		this.fpk = fpk;
	}

	public String getTasktype() {
		return tasktype;
	}

	public void setTasktype(String tasktype) {
		this.tasktype = tasktype;
	} 	  
} 
